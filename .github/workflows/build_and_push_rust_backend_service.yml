name: CI/CT workflow for Rust Actix Web service docker image

on:
  workflow_dispatch:

jobs:
  ci-ct-job-for-rust-actix-web-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install Rust
        run: |
          sudo apt-get install -y curl build-essential
          sudo curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        working-directory: ./backend-services/rust/hello-world-service
      - name: Run tests
        run: |
          cargo test
        working-directory: ./backend-services/rust/hello-world-service
      - name: Run cargo-audit to check for vulnerabilities in the source code 🔍/🛡️
        run: |
          cargo install cargo-audit
          cargo audit
        working-directory: ./backend-services/rust/hello-world-service
      - name: Set up QEMU 
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx 🐳
        uses: docker/setup-buildx-action@v3
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build docker image 🐳/📦
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/rust-hello-world-service:stable .
        working-directory: ./backend-services/rust/hello-world-service
      - name: Run Snyk to check Docker image 🐳/📦 for vulnerabilities 🔍/🛡️
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/rust-hello-world-service:stable
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
      - name: Push docker image 🐳/📦
        run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/rust-hello-world-service:stable
      # - name: Upload Snyk report as sarif 🐳/📦
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif