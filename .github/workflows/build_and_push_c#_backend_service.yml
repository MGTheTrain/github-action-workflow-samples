name: CI/CT workflow for C# ASP .NET Core service

on:
  workflow_dispatch:
    
jobs:
  ci-ct-job-for-csharp-asp-net-core-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Test with the dotnet CLI
        run: dotnet test    
        working-directory: ./backend-services/c#/src/HelloWorldService
      - name: Run Snyk to check for vulnerabilities in the source code 🔍/🛡️
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: ./backend-services/c#/src/HelloWorldService --orgs=${{ secrets.SNYK_ORGANIZATION_ID }} --severity-threshold=high
      - name: Set up QEMU 
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx 🐳
        uses: docker/setup-buildx-action@v3
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build docker image 🐳/📦
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/csharp-hello-world-service:stable .
        working-directory: ./backend-services/c#/src/HelloWorldService
      - name: Run Snyk to check Docker image 🐳/📦 for vulnerabilities 🔍/🛡️
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/csharp-hello-world-service:stable
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
      - name: Push docker image 🐳/📦
        run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/csharp-hello-world-service:stable